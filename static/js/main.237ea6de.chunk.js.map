{"version":3,"sources":["components/NavBar.js","components/CatCard.js","components/Wrapper.js","App.js","index.js"],"names":["Navbar","props","_jsxs","className","navbarState","children","_jsx","scoreState","highScore","score","CatCard","_Fragment","imageAnimation","onClick","imageClickHandler","id","src","process","image","alt","imageName","width","height","loading","Wrapper","imageState","map","index","App","setScoreState","useState","setImageState","setImageAnimation","setnavbarState","initImages","imageList","clicked","useEffect","timer","setTimeout","clearTimeout","scoreIncrementer","newScore","shuffle","array","randomIndex","currentIndex","length","Math","floor","random","console","log","clickedImageIndex","findIndex","newImageState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.237ea6de.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Navbar(props) {\r\n\t// console.log(props)\r\n\treturn (\r\n\t\t<nav className={props.navbarState}>\r\n\t\t\t<h1 className=\"title\">Cat Memorization Game</h1>\r\n\t\t\t{props.navbarState === \"default\" && <p>Try your best to click each cat once!</p>}\r\n\t\t\t{props.navbarState === \"correct\" && <p>Correct!</p>}\r\n\t\t\t{props.navbarState === \"incorrect\" && <p>Incorrect, Sorry you lose!</p>}\r\n\t\t\t<div>\r\n\t\t\t\t<p>Hiscore: {props.scoreState.highScore}</p>\r\n\t\t\t\t{props.navbarState === \"correct\" ? <p>Score: {props.scoreState.score - 1} + 1 = {props.scoreState.score}</p> : <p>Score: {props.scoreState.score}</p>}\r\n\t\t\t</div>\r\n\t\t</nav >\r\n\t);\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\n\nfunction CatCard(props) {\n\t// console.log(props)\n\treturn (\n\t\t<>\n\t\t\t<figure className={props.imageAnimation ? \"cat-box fade-in\" : \"cat-box\"} onClick={() => props.imageClickHandler(props.id)} >\n\t\t\t\t{/* {props.clicked ? <p>ID: {props.id} clicked</p> : <p>ID: {props.id} not clicked</p>} */}\n\t\t\t\t<img src={process.env.PUBLIC_URL + props.image} alt={props.imageName} className=\"cat-image\" width=\"250\" height=\"250\" loading=\"lazy\" />\n\t\t\t\t<div className=\"cat-description\">\n\t\t\t\t\t<p className=\"click-text\">Choose this cat!</p>\n\t\t\t\t</div>\n\t\t\t</figure>\n\t\t</>\n\t);\n}\n\nexport default CatCard;\n","import React from \"react\";\nimport CatCard from \"./CatCard.js\"\n\nfunction Wrapper(props) {\n\t// console.log(props)\n\treturn (\n\t\t<section>\n\t\t\t<div className=\"cat-catalogue\">\n\t\t\t\t{props.imageState.map((image, index) => {\n\t\t\t\t\treturn (<CatCard\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t{...image}\n\t\t\t\t\t\timageAnimation={props.imageAnimation}\n\t\t\t\t\t\timageClickHandler={props.imageClickHandler}\n\t\t\t\t\t/>)\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</section>\n\n\t)\n}\nexport default Wrapper;\n","import { useState, useEffect } from \"react\";\nimport Navbar from \"./components/NavBar.js\"\nimport Wrapper from \"./components/Wrapper.js\"\n\nimport imageList from \"./components/images.json\";\n\nfunction App() {\n\tconst [scoreState, setScoreState] = useState({\n\t\tscore: 0,\n\t\thighScore: 0\n\t})\n\n\tconst [imageState, setImageState] = useState([])\n\n\tconst [imageAnimation, setImageAnimation] = useState(true)\n\n\tconst [navbarState, setnavbarState] = useState(\"default\")\n\n\tconst initImages = () => {\n\t\tvar imageState = []\n\t\timageState = [...imageList].map((image, index) => ({\n\t\t\tid: index,\n\t\t\timageName: \"The cat meows at midnight\",\n\t\t\t...image,\n\t\t\tclicked: false\n\t\t}))\n\t\tsetImageState(imageState)\n\t}\n\n\tuseEffect(() => {\n\t\tinitImages()\n\t}, [])\n\n\tuseEffect(() => {\n\t\tsetImageAnimation(true)\n\t}, [imageAnimation])\n\n\tuseEffect(() => {\n\t\tif (navbarState === \"correct\" || navbarState === \"incorrect\") {\n\t\t\tconst timer = setTimeout(() => {\n\t\t\t\tsetnavbarState(\"default\")\n\t\t\t}, 2000);\n\t\t\t// prevent memory leaks\n\t\t\treturn () => {\n\t\t\t\tclearTimeout(timer);\n\t\t\t};\n\t\t}\n\t}, [navbarState])\n\n\tconst imageClickHandler = (id) => {\n\t\tvar clickedImageIndex = imageState.findIndex((image) => image.id === id)\n\t\tif (imageState[clickedImageIndex].clicked === false) {\n\t\t\tscoreIncrementer()\n\n\t\t\tsetnavbarState(\"correct\")\n\n\t\t\t// update clicked to true\n\t\t\tconst newImageState = imageState\n\t\t\tnewImageState[clickedImageIndex].clicked = true\n\t\t\tsetImageState(newImageState)\n\n\t\t\tconst shuffledImageState = imageState\n\t\t\tsetImageState(shuffle(shuffledImageState))\n\t\t}\n\t\t// u lose\n\t\telse {\n\t\t\t// keep highscore but reset score/game\n\t\t\tsetScoreState({\n\t\t\t\t...scoreState,\n\t\t\t\tscore: 0\n\t\t\t})\n\n\t\t\tsetnavbarState(\"incorrect\")\n\n\t\t\tinitImages()\n\t\t}\n\t\tsetImageAnimation(false)\n\t}\n\n\tconst scoreIncrementer = () => {\n\t\tvar newScore = scoreState.score + 1;\n\t\tif (newScore > scoreState.highScore) {\n\t\t\tsetScoreState({\n\t\t\t\tscore: newScore,\n\t\t\t\thighScore: newScore\n\t\t\t})\n\t\t}\n\t\telse {\n\t\t\tsetScoreState({\n\t\t\t\tscore: newScore,\n\t\t\t\t...scoreState\n\t\t\t})\n\t\t}\n\t}\n\n\tconst shuffle = (array) => {\n\t\tlet currentIndex = array.length\n\t\tlet randomIndex;\n\n\t\twhile (currentIndex > 0) {\n\t\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\t\tcurrentIndex--;\n\t\t\t[array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n\t\t\tconsole.log()\n\t\t}\n\t\treturn array;\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Navbar\n\t\t\t\tscoreState={scoreState}\n\t\t\t\tnavbarState={navbarState}\n\t\t\t/>\n\t\t\t<Wrapper\n\t\t\t\timageState={imageState}\n\t\t\t\timageAnimation={imageAnimation}\n\t\t\t\timageClickHandler={imageClickHandler}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}