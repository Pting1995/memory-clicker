{"version":3,"sources":["components/Navbar/index.js","components/Wrapper/index.js","components/CatCard/index.js","App.js","index.js"],"names":["Navbar","props","className","score","hiscore","Wrapper","children","catCard","src","pic","alt","name","width","height","onClick","clickChoice","id","clicked","App","state","images","console","log","newScore","img","forEach","image","index","setState","sort","Math","random","this","map","catPic","CatCard","Component","ReactDOM","render","document","getElementById"],"mappings":"k1DAeeA,MAZf,SAAgBC,GACZ,OACI,qBAAKC,UAAU,6BAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,mBAAGA,UAAU,UAAb,qCACA,mBAAGA,UAAU,UAAb,mDACA,oBAAGA,UAAU,UAAb,oBAA+BD,EAAME,MAArC,eAAwDF,EAAMG,iB,MCE/DC,MARf,SAAiBJ,GACf,OAAO,sBAAKC,UAAU,YAAf,UACL,qBAAKA,UAAU,MAAf,SACGD,EAAMK,WAFJ,Q,MCQMC,MATf,SAAiBN,GACf,OACE,qBAAKC,UAAU,WAAf,SACE,qBAAKM,IAAKP,EAAMQ,IAAKC,IAAKT,EAAMU,KAAMT,UAAU,UAAUU,MAAM,MAAMC,OAAO,MAAMC,QAAS,kBAAMb,EAAMc,YAAYd,EAAMe,GAAIf,EAAMgB,e,OCiEzHC,E,4MA/DfC,MAAQ,CACNC,OAAQA,EACRjB,MAAO,EACPC,QAAS,EACTa,SAAS,G,EAGXF,YAAc,SAACC,EAAIC,GAGjB,IAAgB,IAAZA,EAAmB,CACrBI,QAAQC,IAAIF,GAGZ,IAAIG,EAAW,EAAKJ,MAAMhB,MAAQ,EAE9BoB,EAAW,EAAKJ,MAAMf,UACxB,EAAKe,MAAMf,QAAUmB,GAGvB,IAAIC,EAAM,EAAKL,MAAMC,OAQrB,OANAI,EAAIC,SAAQ,SAACC,EAAOC,GACdX,IAAOU,EAAMV,KACfQ,EAAIG,GAAOV,SAAU,MAIlB,EAAKW,SAAS,CAEnBR,OAAQI,EAAIK,MAAK,kBAAMC,KAAKC,SAAW,MACvC5B,MAAOoB,EACPN,SAAS,IAOX,OADAG,EAAOK,SAAQ,SAACE,GAAWA,EAAMV,SAAU,KACpC,EAAKW,SAAS,CACnBzB,MAAO,K,4CAKX,WAAU,IAAD,OACP,OACE,gCACE,cAAC,EAAD,CAAQA,MAAO6B,KAAKb,MAAMhB,MAAOC,QAAS4B,KAAKb,MAAMf,UACrD,cAAC,EAAD,UACG4B,KAAKb,MAAMC,OAAOa,KAAI,SAAAC,GACrB,OAAQ,cAACC,EAAD,CAASxB,KAAMuB,EAAOvB,KAAMF,IAAKyB,EAAOzB,IAAKO,GAAIkB,EAAOlB,GAAIC,QAASiB,EAAOjB,QAASF,YAAa,EAAKA,0B,GApD3GqB,a,MCFlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.77e23121.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Navbar(props) {\r\n    return (\r\n        <nav className=\"navbar navbar-dark bg-dark\">\r\n            <div className=\"container-fluid\">\r\n                <p className=\"navText\">Cat Memorization Helper</p>\r\n                <p className=\"navText\">Try your best to click each cat once!</p>\r\n                <p className=\"navText\">Score: {props.score} | Hiscore: {props.hiscore}</p>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"container\">\n    <div className=\"row\">\n      {props.children}\n    </div>;\n      </div>\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction catCard(props) {\n  return (\n    <div className=\"col-md-3\">\n      <img src={props.pic} alt={props.name} className=\"rounded\" width=\"250\" height=\"250\" onClick={() => props.clickChoice(props.id, props.clicked)} />\n    </div>\n\n  );\n}\n\nexport default catCard;\n","import React, { Component } from \"react\";\n// add components here\nimport Navbar from \"./components/Navbar\"\nimport Wrapper from \"./components/Wrapper\"\nimport CatCard from \"./components/CatCard\"\nimport images from \"./images.json\";\n\nclass App extends Component {\n  state = {\n    images: images,\n    score: 0,\n    hiscore: 0,\n    clicked: false,\n  };\n\n  clickChoice = (id, clicked) => {\n    // console.log(images)\n\n    if (clicked === false) {\n      console.log(images)\n\n      // score++\n      var newScore = this.state.score + 1\n      // console.log(newScore)\n      if (newScore > this.state.hiscore) {\n        this.state.hiscore = newScore\n      }\n\n      var img = this.state.images\n\n      img.forEach((image, index) => {\n        if (id === image.id) {\n          img[index].clicked = true;\n        }\n      })\n\n      return this.setState({\n        // randomize\n        images: img.sort(() => Math.random() - 0.5),\n        score: newScore,\n        clicked: true\n      })\n    }\n    // u lose\n    else {\n      // reset but keep hiscore\n      images.forEach((index) => {index.clicked = false})\n      return this.setState({\n        score: 0\n      })\n    }\n    // checks hiscore\n  }\n    render() {\n      return (\n        <div>\n          <Navbar score={this.state.score} hiscore={this.state.hiscore}></Navbar>\n          <Wrapper>\n            {this.state.images.map(catPic => {\n              return (<CatCard name={catPic.name} pic={catPic.pic} id={catPic.id} clicked={catPic.clicked} clickChoice={this.clickChoice} />\n              )\n            }\n            )}\n          </Wrapper>\n\n        </div>\n\n      );\n    }\n  }\n\n  export default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}